{//; changelog:
2018-08-14 - cc created
2018-11-01 - changed to accept freeform of time, as well as user
2018-11-20 - update ws boards
2018-11-27 - integrate wsinit, include PoH
}
{//;!cc sethelp wsship __Usage:__ `!wsship < B | T | M > <time,time,time> [member]`
Use this to indicate your next jump-in times for (B)attleships, (T)ransports or (M)iners, one ship type at a time. Time can be specified as in !afk.
Use it without arguments or with another user's name to see what you or they have already set.
__Examples:__
`!wsship` - show info about your ships
`!wsship M 1h40m` - indicate that you can jump-in a miner in 1 hour and 40 minutes.
`!wsship B 3h aira` - set BS info for Aira
`!wsship efra` - see what Effrafax can bring in.
}
{execcc;wsinit;g}
{set;~ws-categ;{get;_ws-categ}}
{set;~ws-role;{get;_ws-role}}
{set;~ws-chan-comm;{get;_ws-chan-comm}}
{set;~ws-chan-gen;{get;_ws-chan-gen}}
{set;~ws-tags;{get;_ws-tags}}
{set;~isDebug;0}{//; 0=off, 1=on}
{if;{get;~isDebug};==;1;{push;~ws-categ;417726794993500163}}{//; add discord admin category}

{set;~indByChan;{indexof;{get;~ws-chan-gen};{channelid}}}
{if;{get;~indByChan};==;-1;
	{set;~chCat;{channelcategory;{channelid}}}
	{set;~indByCat;{indexof;{get;~ws-categ};{get;~chCat}}}
	{if;{get;~indByCat};==;-1;
      	You can use this command only in your corp-ws channels!{return};
      	{set;~wsIndex;{get;~indByCat}}
  	}
  	;
  	{set;~wsIndex;{get;~indByChan}}
}
{set;~wsTag;{get;~ws-tags;{get;~wsIndex}}}
{//; if called form -opponent channel - ban it}
{set;~indByOppChannel;{indexof;{get;~ws-chan-opp};{channelid}}}
{if;{get;~indByOppChannel};!=;-1;You can not use this command in your opponent channel!{return}}
{//;
{function;updateWSboards;{//; all boards for user}
  {set;~dbg;[]}
  {if;{userhasrole;{get;~ws-role};{params;0}};==;true;
    {foreach;role;{userroles;{params;0}};
      {set;wsindex;{indexof;{get;~ws-role};{get;role}}}
      {push;~dbg;r={get;role} ({rolename;{get;role}}), i={get;wsindex}, chan={get;~ws-chan-comm;{get;wsindex}}}
      {if;{logic;&&;{bool;{get;wsindex};>;-1};{bool;{length;{get;~ws-chan-comm}};>;{get;wsindex}}};
        {set;corpchan;{get;~ws-chan-comm;{get;wsindex}}}
        {if;0{get;_{get;corpchan}_status_msg};{void;{delete;{get;corpchan};{get;_{get;corpchan}_status_msg}}}}
        {set;_{get;corpchan}_status_msg;{send;{get;corpchan};{execcc;wstimes;{get;~ws-tags;{get;wsindex}}}}}
        {set;_{get;corpchan}_status_msg_time;{time}}
      }
    }
  }
{if;{get;~isDebug};==;1;{send;{get;_debugChannel};{join;~dbg;{newline}}}}
}
}
{function;updateWSboard;{//; args: 0=wsIndex}
	{set;~dbg;[]}
  	{set;index;{params;0}}
    {if;{logic;&&;{bool;{get;index};>;-1};{bool;{length;{get;~ws-chan-comm}};>;{get;index}}};
        {set;corpchan;{get;~ws-chan-comm;{get;index}}}
        {if;0{get;_{get;corpchan}_status_msg};{void;{delete;{get;corpchan};{get;_{get;corpchan}_status_msg}}}}
        {set;_{get;corpchan}_status_msg;{send;{get;corpchan};{execcc;wstimes;{get;~ws-tags;{get;index}}}}}
        {set;_{get;corpchan}_status_msg_time;{time}}
    }
{if;{get;~isDebug};==;1;{send;{get;_debugChannel};{join;~dbg;{newline}}}}
}

{set;~now;{time;X}}
{set;~userid;{userid}}
{set;~shiptypes;["B","T","M"]}
{set;~shipnames;["Battleship","Transport","Miner"]}
{set;~t;[]}{set;~ship;}{set;~descr;}
{for;~i;0;<;{argslength};
  {set;~shipindex;{indexof;{get;~shiptypes};{upper;{args;{get;~i}}}}}
  {if;{get;~shipindex};>;-1;
    {if;{get;~ship};==;;{set;~ship;{upper;{args;{get;~i}}}}{set;~shipname;{get;~shipnames;{get;~shipindex}}}}
    ;
  	{set;~tuserid;{userid;{args;{get;~i}};quiet}}
  	{if;{get;~tuserid};==;;{push;~t;{args;{get;~i}}};{set;~userid;{get;~tuserid}}}
  }
}
{set;~time;{trim;{execcc;parsetime;{join;{get;~t};{space}}}}}
{if;{get;~time};==;;Could not parse the time you specified. {return}}
{set;~timerSec;{math;-;{get;~time};900}}
{set;~time;{math;+;{get;~now};{get;~time}}}
{if;{get;~userid};!=;;
  	{if;{get;~ship};!=;;
  		{set;_WSShip{get;~userid}_{get;~wsTag}_{get;~ship};{get;~time}{space}{get;~descr}}
{void;{send;{get;_debugChannel};set `_WSShip{get;~userid}_{get;~wsTag}_{get;~ship}` to `{get;_WSShip{get;~userid}_{get;~wsTag}_{get;~ship}}`}}
      	{if;{get;~timerSec};>;0;
          {timer;{if;{abs;{math;-;{time;X};{math;-;{get;_WSShip{get;~userid}_{get;~wsTag}_{get;~ship}};900}}};<;60;{dm;{get;~userid};Hey! It is about time to jump your {get;~shipname} in: 15 minutes to go, gear up!}};{get;~timerSec}s}
        }
  		{commit}
      	{void;{func.updateWSboard;{get;~wsIndex}}}
  	}
}

{//; get member ws-tags}
{set;index;-1}
{set;wsTags;[]}
{repeat;
  	{set;wsrole;{get;~ws-role;{increment;index}}}
  	{if;{userhasrole;{get;wsrole};{get;~userid}};==;true;{push;wsTags;{get;~ws-tags;{get;index}}}}
	;{length;{get;~ws-tags}}
}
{//; show recorded info (for all WS)}
{set;lines;[]}
{foreach;~wsTag;{get;wsTags};
    {set;~times;[]}
	{void;{foreach;~st;{get;~shiptypes};
      {if;{length;{get;_WSShip{get;~userid}_{get;~wsTag}_{get;~st}}};>;0;
      	{set;~value;{split;{get;_WSShip{get;~userid}_{get;~wsTag}_{get;~st}}{space};{space}}}
      	{set;~secArr;{split;{get;~value;0};,}}
      	{set;~timesArr;[]}
      	{void;{foreach;~tsec;{get;~secArr};
          	{set;~tSecLeft;{math;-;{get;~tsec};{get;~now}}}
          	{if;{get;~tSecLeft};>;0;
              {if;{get;~tSecLeft};<;60;{push;~timesArr;now};
          	    {if;{get;~tSecLeft};<;3600;
                  {push;~timesArr;{round;{math;/;{get;~tSecLeft};60}}m}
                  ;
                  {set;~tHLeft;{round;{math;/;{get;~tSecLeft};360}}}
        	      {push;~timesArr;{math;/;{get;~tHLeft};10}h}
                }
              }
            }
     	}}
		{if;{length;{get;~timesArr}};>;0;{push;~times;{get;~st}{if;{get;~value;1};!=;;{space}({get;~value;1})}: {join;{get;~timesArr};,{space}}}}
        ;
{//;        {push;~times;{get;~st}: -}}
      }
	}}
{push;lines;{get;~wsTag}: {join;{get;~times};,{space}}}
}
Ship information for {usernick;{get;~userid}}:{newline}{join;{get;lines};{newline}}